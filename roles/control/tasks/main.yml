---
- name: update apt cache
  apt: update_cache=yes

- name: install app components
  apt: name={{item}} state=present
  with_items:
    - libpq-dev
    - git
    - software-properties-common
    - python-dev
    - python-pip

- name: pip install 
  pip: name={{item}} state=present
  with_items:
    - datadog
    - pyyaml

- name: get ansible repo
  apt_repository:
    repo: ppa:ansible/ansible
    state: present

- name: update apt cache again
  apt: update_cache=yes

- name: install app components
  apt: name=ansible state=present

- name: delete repo 
  file:
    path: /var/wcdemo-ansible
    state: absent

- name: ensure git repo is present
  git:
    repo: "https://github.com/burnsie7/wcdemo-ansible.git"
    dest: /var/wcdemo-ansible

- name: ensure datadog_callback.yml
  file:
    path: /var/wcdemo-ansible/inventory
    state: absent

- name: generate inventory
  template: src=inventory.j2 dest=/var/wcdemo-ansible/inventory

- name: copy vars 
  copy: src=../../../group_vars/all/vars dest=/var/wcdemo-ansible/group_vars/all/vars

- name: ensure datadog_callback.yml
  file:
    path: /var/wcdemo-ansible/playbooks/callback_plugins/datadog_callback.yml
    state: absent

- name: ensure datadog_callback.yml
  file:
    path: /var/wcdemo-ansible/playbooks/callback_plugins/datadog_callback.yml
    state: touch

- name: copy api key to datadog_callback.yml
  shell: 'echo api_key: "{{ datadog_api_key }}" >> /var/wcdemo-ansible/playbooks/callback_plugins/datadog_callback.yml'

# TODO: Generate keys as ubuntu user
#- name: generate ssh keys
#  become: ubuntu
#  shell: ssh-keygen -b 2048 -t rsa -f /home/ubuntu/.ssh/id_rsa -q -N ""
#  args:
#    creates: /home/ubuntu/.ssh/id_rsa

- name: fetch pub key
  fetch:
    src: /home/ubuntu/.ssh/id_rsa.pub 
    dest: ../tmp/demo_id_rsa.pub
    flat: yes

# this works when in setup but not from here
- name: install ssh key
  local_action: "shell cat ../tmp/demo_id_rsa.pub | ssh -i {{ pem_path }} -oStrictHostKeyChecking=no -l ubuntu ubuntu@{{ inventory_hostname }} 'cat >> .ssh/authorized_keys'"

- cron:
    name: "test job"
    minute: "*/2"
    job: "ansible-playbook /var/wcdemo-ansible/playbooks/test.yml"

# TODO: Create inventory using internal IPs, copy vars over, make cron task do something
